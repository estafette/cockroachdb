apiVersion: v1
kind: Pod
metadata:
  name: ${APP_NAME}-client-secure
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}-client
spec:
  serviceAccountName: ${APP_NAME}
  initContainers:
  # The init-certs container sends a certificate signing request to the
  # kubernetes cluster.
  # You can see pending requests using: kubectl get csr
  # CSRs can be approved using:         kubectl certificate approve <csr name>
  #
  # In addition to the client certificate and key, the init-certs entrypoint will symlink
  # the cluster CA to the certs directory.
  - name: init-certs
    image: cockroachdb/cockroach-k8s-request-cert:latest
    imagePullPolicy: IfNotPresent
    command:
      - /bin/ash
      - -ecx
      - >-
        /request-cert
        -namespace=${POD_NAMESPACE}
        -certs-dir=/cockroach-certs/
        -symlink-ca-from=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        -type=client
        -user=${USER}
    env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
    volumeMounts:
      - name: certs
        mountPath: /cockroach-certs/
  containers:
  - name: cockroachdb-client
    image: cockroachdb/cockroach:latest
    imagePullPolicy: IfNotPresent
    volumeMounts:
    - name: certs
      mountPath: /cockroach-certs
    # Keep a pod open indefinitely so kubectl exec can be used to get a shell to it
    # and run cockroach client commands, such as cockroach sql, cockroach node status, etc.
    command:
    - sleep
    - "2147483648" # 2^31
  # This pod isn't doing anything important, so don't bother waiting to terminate it.
  terminationGracePeriodSeconds: 0
  volumes:
  - name: certs
    emptyDir: {}